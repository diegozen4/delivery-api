name: SonarCloud Analysis

on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'microsoft'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\dotnet-sonarscanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          dotnet tool update dotnet-sonarscanner --global

      - name: Begin SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PR_ARGS=""
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_ARGS="/d:sonar.pullrequest.provider=\"github\" \
                    /d:sonar.pullrequest.github.repository=\" ${{ github.repository }} \" 
                    /d:sonar.pullrequest.key=\" ${{ github.event.pull_request.number }} \" 
                    /d:sonar.pullrequest.branch=\" ${{ github.event.pull_request.head.ref }} \" 
                    /d:sonar.pullrequest.base=\" ${{ github.event.pull_request.base.ref }} \""
          fi
          dotnet sonarscanner begin \
            /k:"diegozen4_delivery-api" \
            /o:"diegozen4" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.scm.revision="${{ github.sha }}" \
            ${PR_ARGS}

      - name: Build the solution
        run: dotnet build DeliveryApp.sln

      - name: End SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"